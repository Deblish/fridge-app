<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Add Item</title>
  <link href="/css/styles.css" rel="stylesheet">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body class="bg-yellow-100 min-h-screen relative">

  <!-- Pop-up centered at the top -->
  <div id="notification" class="hidden fixed top-4 left-1/2 transform -translate-x-1/2 bg-white border-l-4 p-4 shadow-lg z-50">
    <p id="notification-message" class="text-sm"></p>
  </div>

  <div class="container mx-auto p-4">
    <div class="w-full max-w-md mx-auto bg-white p-8 rounded-lg shadow-md">
      <h1 class="text-2xl font-bold mb-6 text-center">Store item</h1>
      
      <!-- Removed inline error/success messages, now use popup -->

      <form action="/add-item" method="POST" enctype="multipart/form-data" class="space-y-4">
        <!-- Photo Capture -->
        <div class="flex flex-col items-center">
          <label for="photo" class="cursor-pointer">
            <div id="icon-container" class="flex items-center justify-center w-16 h-16 bg-gray-200 rounded-full hover:bg-gray-300">
              <svg id="photo-icon" xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7h4l1-2h8l1 2h4v12H3V7z" />
                <circle cx="12" cy="13" r="3" stroke="currentColor" stroke-width="2" fill="none" />
              </svg>
            </div>
            <input 
              type="file" 
              name="photo" 
              id="photo" 
              accept="image/jpeg, image/png, image/gif, image/bmp, image/webp" 
              capture="environment" 
              required 
              class="hidden"
            >
          </label>
          <small id="photo-required-text" class="text-gray-500 mt-2">*Photo is required</small>
        </div>
          
        <!-- Toggle Buttons -->
        <div class="flex justify-center mb-6 mt-4">
          <button 
            id="toggle-days" 
            class="px-4 py-2 mr-2 bg-indigo-600 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
            onclick="toggleInput('days'); return false;"
          >
            Days to Store
          </button>
          <button 
            id="toggle-date" 
            class="px-4 py-2 bg-gray-200 text-gray-700 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
            onclick="toggleInput('date'); return false;"
          >
            Expiry Date
          </button>
        </div>
        
        <!-- Days to Store -->
        <div id="days-input">
          <label for="days_to_store" class="block text-sm font-medium text-gray-700">Days to Store:</label>
          <input 
            type="number" 
            name="days_to_store" 
            min="1" 
            max="31" 
            value="1" 
            required 
            class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
          >
        </div>
        
        <!-- Expiry Date -->
        <div id="date-input" class="hidden">
          <label for="expiry_date" class="block text-sm font-medium text-gray-700">Expiry Date:</label>
          <input 
            type="date" 
            name="expiry_date" 
            id="expiry_date" 
            required 
            min="<%= todayDate %>"
            class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
          >
        </div>
        
		<!-- Fridge Selection -->
		<div>
			<label for="fridge" class="block text-sm font-medium text-gray-700">Fridge:</label>
			<select 
			name="fridge" 
			required 
			class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
			>
			<option value="">--Select Fridge--</option>
			<option value="Fridge A">Left Fridge</option>
			<option value="Fridge B">Right Fridge</option>
			</select>
		</div>
        
        <!-- Username -->
        <div>
          <label for="username" class="block text-sm font-medium text-gray-700">Username:</label>
          <input 
            type="text" 
            name="username" 
            id="username" 
            required 
            minlength="3"
            class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
            placeholder="username"
          >
        </div>
        
        <!-- Submit Button -->
        <div>
          <button type="submit" class="w-full px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500">
            Add Item
          </button>
        </div>
      </form>
      
      <div class="mt-6 text-center">
        <a href="/my-items" class="text-indigo-600 hover:text-indigo-800">My Items</a>
      </div>
    </div>
  </div>
  
  <script>
    function toggleInput(mode) {
      const daysInput = document.getElementById('days-input');
      const dateInput = document.getElementById('date-input');
      const toggleDaysBtn = document.getElementById('toggle-days');
      const toggleDateBtn = document.getElementById('toggle-date');
      const daysInputField = daysInput.querySelector('input');
      const dateInputField = dateInput.querySelector('input');
      
      if (mode === 'days') {
        daysInput.classList.remove('hidden');
        dateInput.classList.add('hidden');
        
        daysInputField.disabled = false;
        daysInputField.required = true;
        dateInputField.disabled = true;
        dateInputField.required = false;
        
        toggleDaysBtn.classList.remove('bg-gray-200', 'text-gray-700');
        toggleDaysBtn.classList.add('bg-indigo-600', 'text-white');
        toggleDateBtn.classList.remove('bg-indigo-600', 'text-white');
        toggleDateBtn.classList.add('bg-gray-200', 'text-gray-700');
      } else {
        daysInput.classList.add('hidden');
        dateInput.classList.remove('hidden');
        
        daysInputField.disabled = true;
        daysInputField.required = false;
        dateInputField.disabled = false;
        dateInputField.required = true;
        
        toggleDateBtn.classList.remove('bg-gray-200', 'text-gray-700');
        toggleDateBtn.classList.add('bg-indigo-600', 'text-white');
        toggleDaysBtn.classList.remove('bg-indigo-600', 'text-white');
        toggleDaysBtn.classList.add('bg-gray-200', 'text-gray-700');
      }
    }

    document.addEventListener('DOMContentLoaded', () => {
      toggleInput('days');

      const urlParams = new URLSearchParams(window.location.search);
      const error = urlParams.get('error');
      const added = urlParams.get('added');
      if (error) {
        showNotification(error, 'border-red-500 text-red-700');
      }
      if (added) {
        showNotification('Item successfully added.', 'border-green-500 text-green-700');
      }

      const photoInput = document.getElementById('photo');
      photoInput.addEventListener('change', function() {
        if (this.files && this.files.length > 0) {
          document.getElementById('photo-required-text').remove();
          const photoIcon = document.getElementById('photo-icon');
          // Tick icon:
          photoIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />';
        }
      });
    });

    function showNotification(message, styleClasses) {
      const notification = document.getElementById('notification');
      const notificationMessage = document.getElementById('notification-message');
      notificationMessage.textContent = message;
      notification.classList.remove('hidden');
      notification.classList.add(styleClasses);
      setTimeout(() => {
        notification.classList.add('hidden');
      }, 3000);
    }
  </script>
</body>
</html>